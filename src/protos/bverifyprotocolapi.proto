syntax = "proto3";

package serialization;
import "protos/mpt.proto";
option java_outer_classname = "BVerifyAPIMessageSerialization";

/**
* OVERALL NOTES:
*	-   an id is a string representing a unique user id 
*		that allows each client to look up that user in the 
* 		pki. This does not need to be part of a production 
* 		system and could be changed
*/


/**
*   Receipt (this is a stand in for arbitrary data)
*/
message Receipt {
    string warehouse_id = 1;
    string depositor_id = 2;
    string accountant = 3;
    string category = 4;
    string date = 5;
    string insurance = 6;
    double weight = 7;
    double volume = 8;
    double humidity = 9;
    double price = 10;
    string details = 11;
}

/**
* 	Generic ADS Update 
*/
message ADSModification {
	bytes ads_id = 1;
	bytes new_value = 2;
	// [signature is not always included]
	// signature is only included when a client is 
	// sending an request to the server to initiate
	// an operation. It is not included 
	// when a server is requesting approval for a change
	// from a client
	Signature signature = 3;
}

/**
* 	Generic signature message along with the 
*	id of the signer
*/
message Signature {
	bytes signature = 1;
}

/** 
*		Request messages are used to alter the ads 
* 		commitments on the server. These are
*	 	sent from the client to the server to intiate
* 		change(s) to an ads(es) stored on the server.
* 		The server also will forward these request messages
* 		to other relevant clients to request approval
**/
message Request {
	repeated ADSModification modifications = 1;
	oneof change_request {
		IssueReceipt issue = 3;
		RedeemReceipt redeem = 4;
		TransferReceipt transfer = 5;
	}
	string request_initiator_id = 6;
}

/**
* Data required for a request issue a receipt
*/
message IssueReceipt {
	Receipt receipt = 1;
}

/**
* Data required for request to redeem a receipt
*/
message RedeemReceipt{
	bytes receipt_hash = 1;
}

/**
* Data required for a request to transfer a receipt 
*/
message TransferReceipt {
	bytes receipt_hash = 1;
}


/** 
*		Response messages contain 
*		signatures for ADS Updates
*		sent from clients to the server
**/
message Response {
	repeated Signature signatures = 1;
}

/** TO BE USED LATER **/

/**
* Request for the server to send updatess
*/
message GetUpdatesRequest {
	int32 from_commit_number = 1;
	repeated bytes keys = 2; 
}

/**
* A sequence of updates (starting from the oldest)
*/
message Updates {
	repeated MerklePrefixTrie update = 1;
}







